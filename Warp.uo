(#input arguments for the entire file#)
{
    #coments
    
    coments#

    #
    basic syntax
    <class> <name>(<arguments>){<value>};
    
    static elements in all objects:
    <name> == {
        <value>;

        static variable:
            StObj __C ReadOnly
            {<class>};
            
            StObj __N ReadOnly
            {<original name>};
            
            StObj __P ReadOnly
            {<Parent>};
            
            StObj __Arg ReadOnly
            {<list named/indexed objects from (<arguments>)>};
            
            StObj __L ReadOnly
            { get all local objects from <name> };

        static methods:
            meth __S
            (obj C, Var N, obj V, \ List Args)
            { <C> <N>(<Args>){<V>} declaration in <name> if it's already in <N>, then change <V> };
            
            meth __D
            (Var N)
            { delete obj <N> from <name> };
    };

    <name>(<arguments>); -> init <name> with <arguments>

    (<needed args>){<value>}(<input args>); -> execution <value> with <args>
    #

    obj Name
    {
        obj x{1;};
        obj y{3;};
    };
    obj lp
    (\ obj *) #any named objects#
    {
        obj bg
        {
            "golf"
        };
    };
    lp(obj i{0;};) test1
    ()
    {
        # -> test1 == lp.init(arguments)#
        1; # -> #
    }; # -> test1.i == 1; test1.bg == {ret("golf")}#
};